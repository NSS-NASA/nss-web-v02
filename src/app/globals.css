/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
        *, :before, :after, ::backdrop {
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-rotate-x: rotateX(0);
            --tw-rotate-y: rotateY(0);
            --tw-rotate-z: rotateZ(0);
            --tw-skew-x: skewX(0);
            --tw-skew-y: skewY(0);
            --tw-space-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-tracking: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
        }
    }
}

@layer theme {
    :root, :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        --color-green-500: oklch(.723 .219 149.579);
        --color-blue-500: oklch(.623 .214 259.815);
        --color-gray-100: oklch(.967 .003 264.542);
        --color-black: #000;
        --color-white: #fff;
        --spacing: .25rem;
        --text-xs: .75rem;
        --text-xs--line-height: calc(1 / .75);
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25 / .875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: calc(2.25 / 1.875);
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5 / 2.25);
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --tracking-tight: -.025em;
        --radius-md: calc(var(--radius)  - 2px);
        --radius-lg: var(--radius);
        --radius-xl: calc(var(--radius)  + 4px);
        --animate-spin: spin 1s linear infinite;
        --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1) infinite;
        --blur-sm: 8px;
        --aspect-video: 16 / 9;
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
        --default-font-family: var(--font-sans);
        --default-font-feature-settings: var(--font-sans--font-feature-settings);
        --default-font-variation-settings: var(--font-sans--font-variation-settings);
        --default-mono-font-family: var(--font-mono);
        --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
        --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
        --color-background: var(--background);
        --color-card: var(--card);
        --color-primary: var(--primary);
        --color-primary-foreground: var(--primary-foreground);
        --color-muted: var(--muted);
        --color-border: var(--border);
        --color-ring: var(--ring);
        --color-sidebar: var(--sidebar);
        --color-sidebar-border: var(--sidebar-border);
        --glass-bg: var(--glass-bg);
        --glass-tint: var(--glass-tint);
        --glass-border: var(--glass-border);
        --glass-blur: var(--glass-blur);
        --glow-cyan: var(--glow-cyan);
    }
}

@layer base {
    *, :after, :before, ::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    html, :host {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    body {
        line-height: inherit;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1, h2, h3, h4, h5, h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b, strong {
        font-weight: bolder;
    }

    code, kbd, samp, pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub, sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative;
    }

    sub {
        bottom: -.25em;
    }

    sup {
        top: -.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol, ul, menu {
        list-style: none;
    }

    img, svg, video, canvas, audio, iframe, embed, object {
        vertical-align: middle;
        display: block;
    }

    img, video {
        max-width: 100%;
        height: auto;
    }

    button, input, select, optgroup, textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
        color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
        ::placeholder {
            color: color-mix(in oklab, currentColor 50%, transparent);
        }
    }

    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-datetime-edit {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-year-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-month-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-day-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-hour-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-minute-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-second-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-millisecond-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button, input:where([type="button"], [type="reset"], [type="submit"]) {
        appearance: button;
    }

    ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button {
        height: auto;
    }

    ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }

    * {
        border-color: var(--border);
        outline-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        * {
            outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    * {
        border-color: var(--border);
        outline-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        * {
            outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    html {
        font-size: var(--font-size);
    }

    body {
        background-color: var(--background);
        color: var(--foreground);
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    @font-face {
        font-family: Geist;
        src: url("/fonts/Geist-Variable.woff2") format("woff2-variations");
        font-weight: 100 900;
        font-style: normal;
        font-display: swap;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
        font-family: Geist, system-ui, sans-serif;
        font-size: clamp(1.75rem, 2vw, 2.25rem);
        font-weight: 700;
        line-height: 1.25;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
        font-family: Geist, system-ui, sans-serif;
        font-size: clamp(1.375rem, 1.5vw, 1.75rem);
        font-weight: 600;
        line-height: 1.3;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
        font-size: 1.125rem;
        font-weight: 600;
        line-height: 1.4;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
        font-size: 1rem;
        font-weight: 600;
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
        font-family: Geist, system-ui, sans-serif;
        font-size: 1rem;
        line-height: 1.5;
    }

    * {
        border-color: var(--border);
    }

    body {
        background-color: var(--background);
        color: var(--foreground);
    }
}

@layer utilities {
    .\@container\/card-header {
        container: card-header / inline-size;
    }

    .pointer-events-none {
        pointer-events: none;
    }

    .absolute {
        position: absolute;
    }

    .fixed {
        position: fixed;
    }

    .relative {
        position: relative;
    }

    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }

    .-top-1 {
        top: calc(var(--spacing) * -1);
    }

    .-top-8 {
        top: calc(var(--spacing) * -8);
    }

    .top-0 {
        top: calc(var(--spacing) * 0);
    }

    .top-1\/2 {
        top: 50%;
    }

    .top-16 {
        top: calc(var(--spacing) * 16);
    }

    .-right-1 {
        right: calc(var(--spacing) * -1);
    }

    .right-0 {
        right: calc(var(--spacing) * 0);
    }

    .right-4 {
        right: calc(var(--spacing) * 4);
    }

    .-bottom-8 {
        bottom: calc(var(--spacing) * -8);
    }

    .bottom-0 {
        bottom: calc(var(--spacing) * 0);
    }

    .bottom-4 {
        bottom: calc(var(--spacing) * 4);
    }

    .left-0 {
        left: calc(var(--spacing) * 0);
    }

    .left-1\/2 {
        left: 50%;
    }

    .left-3 {
        left: calc(var(--spacing) * 3);
    }

    .left-4 {
        left: calc(var(--spacing) * 4);
    }

    .z-30 {
        z-index: 30;
    }

    .z-40 {
        z-index: 40;
    }

    .z-50 {
        z-index: 50;
    }

    .col-start-2 {
        grid-column-start: 2;
    }

    .row-span-2 {
        grid-row: span 2 / span 2;
    }

    .row-start-1 {
        grid-row-start: 1;
    }

    .mx-auto {
        margin-inline: auto;
    }

    .mt-1 {
        margin-top: calc(var(--spacing) * 1);
    }

    .mt-2 {
        margin-top: calc(var(--spacing) * 2);
    }

    .mt-3 {
        margin-top: calc(var(--spacing) * 3);
    }

    .mt-4 {
        margin-top: calc(var(--spacing) * 4);
    }

    .mt-6 {
        margin-top: calc(var(--spacing) * 6);
    }

    .mr-1 {
        margin-right: calc(var(--spacing) * 1);
    }

    .mr-2 {
        margin-right: calc(var(--spacing) * 2);
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .mb-6 {
        margin-bottom: calc(var(--spacing) * 6);
    }

    .ml-0 {
        margin-left: calc(var(--spacing) * 0);
    }

    .ml-1 {
        margin-left: calc(var(--spacing) * 1);
    }

    .ml-auto {
        margin-left: auto;
    }

    .block {
        display: block;
    }

    .flex {
        display: flex;
    }

    .grid {
        display: grid;
    }

    .hidden {
        display: none;
    }

    .inline {
        display: inline;
    }

    .inline-block {
        display: inline-block;
    }

    .inline-flex {
        display: inline-flex;
    }

    .aspect-square {
        aspect-ratio: 1;
    }

    .aspect-video {
        aspect-ratio: var(--aspect-video);
    }

    .size-4 {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }

    .size-9 {
        width: calc(var(--spacing) * 9);
        height: calc(var(--spacing) * 9);
    }

    .size-10 {
        width: calc(var(--spacing) * 10);
        height: calc(var(--spacing) * 10);
    }

    .size-full {
        width: 100%;
        height: 100%;
    }

    .h-2 {
        height: calc(var(--spacing) * 2);
    }

    .h-2\.5 {
        height: calc(var(--spacing) * 2.5);
    }

    .h-3 {
        height: calc(var(--spacing) * 3);
    }

    .h-4 {
        height: calc(var(--spacing) * 4);
    }

    .h-5 {
        height: calc(var(--spacing) * 5);
    }

    .h-6 {
        height: calc(var(--spacing) * 6);
    }

    .h-7 {
        height: calc(var(--spacing) * 7);
    }

    .h-8 {
        height: calc(var(--spacing) * 8);
    }

    .h-9 {
        height: calc(var(--spacing) * 9);
    }

    .h-10 {
        height: calc(var(--spacing) * 10);
    }

    .h-12 {
        height: calc(var(--spacing) * 12);
    }

    .h-16 {
        height: calc(var(--spacing) * 16);
    }

    .h-32 {
        height: calc(var(--spacing) * 32);
    }

    .h-48 {
        height: calc(var(--spacing) * 48);
    }

    .h-64 {
        height: calc(var(--spacing) * 64);
    }

    .h-\[1\.15rem\] {
        height: 1.15rem;
    }

    .h-\[600px\] {
        height: 600px;
    }

    .h-\[calc\(100\%-1px\)\] {
        height: calc(100% - 1px);
    }

    .h-full {
        height: 100%;
    }

    .max-h-96 {
        max-height: calc(var(--spacing) * 96);
    }

    .min-h-screen {
        min-height: 100vh;
    }

    .w-2 {
        width: calc(var(--spacing) * 2);
    }

    .w-2\.5 {
        width: calc(var(--spacing) * 2.5);
    }

    .w-3 {
        width: calc(var(--spacing) * 3);
    }

    .w-4 {
        width: calc(var(--spacing) * 4);
    }

    .w-5 {
        width: calc(var(--spacing) * 5);
    }

    .w-6 {
        width: calc(var(--spacing) * 6);
    }

    .w-8 {
        width: calc(var(--spacing) * 8);
    }

    .w-10 {
        width: calc(var(--spacing) * 10);
    }

    .w-12 {
        width: calc(var(--spacing) * 12);
    }

    .w-32 {
        width: calc(var(--spacing) * 32);
    }

    .w-48 {
        width: calc(var(--spacing) * 48);
    }

    .w-64 {
        width: calc(var(--spacing) * 64);
    }

    .w-fit {
        width: fit-content;
    }

    .w-full {
        width: 100%;
    }

    .max-w-\[80\%\] {
        max-width: 80%;
    }

    .min-w-0 {
        min-width: calc(var(--spacing) * 0);
    }

    .min-w-24 {
        min-width: calc(var(--spacing) * 24);
    }

    .flex-1 {
        flex: 1;
    }

    .flex-shrink-0, .shrink-0 {
        flex-shrink: 0;
    }

    .grow {
        flex-grow: 1;
    }

    .-translate-x-1\/2 {
        --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-x-full {
        --tw-translate-x: -100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-x-0 {
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-y-1\/2 {
        --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .transform {
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    }

    .animate-pulse {
        animation: var(--animate-pulse);
    }

    .animate-spin {
        animation: var(--animate-spin);
    }

    .touch-none {
        touch-action: none;
    }

    .auto-rows-min {
        grid-auto-rows: min-content;
    }

    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    .grid-rows-\[auto_auto\] {
        grid-template-rows: auto auto;
    }

    .flex-col {
        flex-direction: column;
    }

    .flex-row {
        flex-direction: row;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .items-center {
        align-items: center;
    }

    .items-start {
        align-items: flex-start;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .justify-end {
        justify-content: flex-end;
    }

    .justify-start {
        justify-content: flex-start;
    }

    .gap-1 {
        gap: calc(var(--spacing) * 1);
    }

    .gap-1\.5 {
        gap: calc(var(--spacing) * 1.5);
    }

    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }

    .gap-6 {
        gap: calc(var(--spacing) * 6);
    }

    :where(.space-y-0 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-1 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-2 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-3 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-4 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-6 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }

    .self-start {
        align-self: flex-start;
    }

    .justify-self-end {
        justify-self: flex-end;
    }

    .overflow-hidden {
        overflow: hidden;
    }

    .overflow-y-auto {
        overflow-y: auto;
    }

    .rounded-\[inherit\] {
        border-radius: inherit;
    }

    .rounded-full {
        border-radius: 3.40282e38px;
    }

    .rounded-lg {
        border-radius: var(--radius);
    }

    .rounded-md {
        border-radius: calc(var(--radius)  - 2px);
    }

    .rounded-xl {
        border-radius: calc(var(--radius)  + 4px);
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .border-l {
        border-left-style: var(--tw-border-style);
        border-left-width: 1px;
    }

    .border-l-2 {
        border-left-style: var(--tw-border-style);
        border-left-width: 2px;
    }

    .border-destructive\/20 {
        border-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .border-destructive\/20 {
            border-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
    }

    .border-info\/20 {
        border-color: var(--info);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .border-info\/20 {
            border-color: color-mix(in oklab, var(--info) 20%, transparent);
        }
    }

    .border-input {
        border-color: var(--input);
    }

    .border-primary {
        border-color: var(--primary);
    }

    .border-primary\/20 {
        border-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .border-primary\/20 {
            border-color: color-mix(in oklab, var(--primary) 20%, transparent);
        }
    }

    .border-success\/20 {
        border-color: var(--success);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .border-success\/20 {
            border-color: color-mix(in oklab, var(--success) 20%, transparent);
        }
    }

    .border-transparent {
        border-color: #0000;
    }

    .border-warning\/20 {
        border-color: var(--warning);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .border-warning\/20 {
            border-color: color-mix(in oklab, var(--warning) 20%, transparent);
        }
    }

    .border-t-transparent {
        border-top-color: #0000;
    }

    .border-l-transparent {
        border-left-color: #0000;
    }

    .bg-background {
        background-color: var(--background);
    }

    .bg-black\/50 {
        background-color: #00000080;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-black\/50 {
            background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
        }
    }

    .bg-border {
        background-color: var(--border);
    }

    .bg-card {
        background-color: var(--card);
    }

    .bg-destructive {
        background-color: var(--destructive);
    }

    .bg-destructive\/5 {
        background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-destructive\/5 {
            background-color: color-mix(in oklab, var(--destructive) 5%, transparent);
        }
    }

    .bg-gray-100 {
        background-color: var(--color-gray-100);
    }

    .bg-info\/5 {
        background-color: var(--info);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-info\/5 {
            background-color: color-mix(in oklab, var(--info) 5%, transparent);
        }
    }

    .bg-input-background {
        background-color: var(--input-background);
    }

    .bg-muted {
        background-color: var(--muted);
    }

    .bg-muted\/30 {
        background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-muted\/30 {
            background-color: color-mix(in oklab, var(--muted) 30%, transparent);
        }
    }

    .bg-primary {
        background-color: var(--primary);
    }

    .bg-primary\/20 {
        background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/20 {
            background-color: color-mix(in oklab, var(--primary) 20%, transparent);
        }
    }

    .bg-primary\/30 {
        background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/30 {
            background-color: color-mix(in oklab, var(--primary) 30%, transparent);
        }
    }

    .bg-secondary {
        background-color: var(--secondary);
    }

    .bg-sidebar-accent {
        background-color: var(--sidebar-accent);
    }

    .bg-success {
        background-color: var(--success);
    }

    .bg-success\/5 {
        background-color: var(--success);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-success\/5 {
            background-color: color-mix(in oklab, var(--success) 5%, transparent);
        }
    }

    .bg-warning {
        background-color: var(--warning);
    }

    .bg-warning\/5 {
        background-color: var(--warning);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-warning\/5 {
            background-color: color-mix(in oklab, var(--warning) 5%, transparent);
        }
    }

    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .bg-gradient-to-t {
        --tw-gradient-position: to top in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .from-background {
        --tw-gradient-from: var(--background);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-black\/60 {
        --tw-gradient-from: #0009;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-black\/60 {
            --tw-gradient-from: color-mix(in oklab, var(--color-black) 60%, transparent);
        }
    }

    .from-blue-500 {
        --tw-gradient-from: var(--color-blue-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-green-500 {
        --tw-gradient-to: var(--color-green-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-muted {
        --tw-gradient-to: var(--muted);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-transparent {
        --tw-gradient-to: transparent;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .object-cover {
        object-fit: cover;
    }

    .p-0 {
        padding: calc(var(--spacing) * 0);
    }

    .p-3 {
        padding: calc(var(--spacing) * 3);
    }

    .p-4 {
        padding: calc(var(--spacing) * 4);
    }

    .p-6 {
        padding: calc(var(--spacing) * 6);
    }

    .p-\[3px\] {
        padding: 3px;
    }

    .p-px {
        padding: 1px;
    }

    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }

    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }

    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }

    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }

    .py-0\.5 {
        padding-block: calc(var(--spacing) * .5);
    }

    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }

    .py-1\.5 {
        padding-block: calc(var(--spacing) * 1.5);
    }

    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }

    .py-2\.5 {
        padding-block: calc(var(--spacing) * 2.5);
    }

    .py-12 {
        padding-block: calc(var(--spacing) * 12);
    }

    .pt-0 {
        padding-top: calc(var(--spacing) * 0);
    }

    .pt-4 {
        padding-top: calc(var(--spacing) * 4);
    }

    .pt-6 {
        padding-top: calc(var(--spacing) * 6);
    }

    .pt-16 {
        padding-top: calc(var(--spacing) * 16);
    }

    .pr-4 {
        padding-right: calc(var(--spacing) * 4);
    }

    .pb-2 {
        padding-bottom: calc(var(--spacing) * 2);
    }

    .pb-3 {
        padding-bottom: calc(var(--spacing) * 3);
    }

    .pb-6 {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .pl-10 {
        padding-left: calc(var(--spacing) * 10);
    }

    .text-center {
        text-align: center;
    }

    .text-left {
        text-align: left;
    }

    .text-right {
        text-align: right;
    }

    .align-middle {
        vertical-align: middle;
    }

    .font-mono {
        font-family: var(--font-mono);
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }

    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }

    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
    }

    .text-6xl {
        font-size: var(--text-6xl);
        line-height: var(--tw-leading, var(--text-6xl--line-height));
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .leading-none {
        --tw-leading: 1;
        line-height: 1;
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .tracking-tight {
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight);
    }

    .whitespace-nowrap {
        white-space: nowrap;
    }

    .text-card-foreground {
        color: var(--card-foreground);
    }

    .text-destructive {
        color: var(--destructive);
    }

    .text-foreground {
        color: var(--foreground);
    }

    .text-info {
        color: var(--info);
    }

    .text-muted-foreground {
        color: var(--muted-foreground);
    }

    .text-primary {
        color: var(--primary);
    }

    .text-primary-foreground {
        color: var(--primary-foreground);
    }

    .text-secondary-foreground {
        color: var(--secondary-foreground);
    }

    .text-sidebar-accent-foreground {
        color: var(--sidebar-accent-foreground);
    }

    .text-sidebar-foreground {
        color: var(--sidebar-foreground);
    }

    .text-success {
        color: var(--success);
    }

    .text-warning {
        color: var(--warning);
    }

    .text-white {
        color: var(--color-white);
    }

    .capitalize {
        text-transform: capitalize;
    }

    .underline-offset-4 {
        text-underline-offset: 4px;
    }

    .opacity-40 {
        opacity: .4;
    }

    .opacity-50 {
        opacity: .5;
    }

    .opacity-75 {
        opacity: .75;
    }

    .shadow-sm {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .ring-0 {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .ring-ring\/50 {
        --tw-ring-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .ring-ring\/50 {
            --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .filter {
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .backdrop-blur-sm {
        --tw-backdrop-blur: blur(var(--blur-sm));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .transition-\[color\,box-shadow\] {
        transition-property: color, box-shadow;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-colors {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-transform {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .duration-100 {
        --tw-duration: .1s;
        transition-duration: .1s;
    }

    .duration-300 {
        --tw-duration: .3s;
        transition-duration: .3s;
    }

    .outline-none {
        --tw-outline-style: none;
        outline-style: none;
    }

    .select-none {
        -webkit-user-select: none;
        user-select: none;
    }

    .running {
        animation-play-state: running;
    }

    .selection\:bg-primary ::selection, .selection\:bg-primary::selection {
        background-color: var(--primary);
    }

    .selection\:text-primary-foreground ::selection, .selection\:text-primary-foreground::selection {
        color: var(--primary-foreground);
    }

    .file\:inline-flex::file-selector-button {
        display: inline-flex;
    }

    .file\:h-7::file-selector-button {
        height: calc(var(--spacing) * 7);
    }

    .file\:border-0::file-selector-button {
        border-style: var(--tw-border-style);
        border-width: 0;
    }

    .file\:bg-transparent::file-selector-button {
        background-color: #0000;
    }

    .file\:text-sm::file-selector-button {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .file\:font-medium::file-selector-button {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .file\:text-foreground::file-selector-button {
        color: var(--foreground);
    }

    .placeholder\:text-muted-foreground::placeholder {
        color: var(--muted-foreground);
    }

    @media (hover: hover) {
        .hover\:bg-accent:hover {
            background-color: var(--accent);
        }
    }

    @media (hover: hover) {
        .hover\:bg-destructive\/90:hover {
            background-color: var(--destructive);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-destructive\/90:hover {
                background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-primary\/90:hover {
            background-color: var(--primary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-primary\/90:hover {
                background-color: color-mix(in oklab, var(--primary) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-secondary\/80:hover {
            background-color: var(--secondary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-secondary\/80:hover {
                background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-sidebar-accent\/50:hover {
            background-color: var(--sidebar-accent);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-sidebar-accent\/50:hover {
                background-color: color-mix(in oklab, var(--sidebar-accent) 50%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:text-accent-foreground:hover {
            color: var(--accent-foreground);
        }
    }

    @media (hover: hover) {
        .hover\:underline:hover {
            text-decoration-line: underline;
        }
    }

    @media (hover: hover) {
        .hover\:opacity-100:hover {
            opacity: 1;
        }
    }

    @media (hover: hover) {
        .hover\:ring-4:hover {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .focus-visible\:border-ring:focus-visible {
        border-color: var(--ring);
    }

    .focus-visible\:ring-4:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .focus-visible\:ring-\[3px\]:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .focus-visible\:ring-destructive\/20:focus-visible {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .focus-visible\:ring-destructive\/20:focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
    }

    .focus-visible\:ring-ring\/50:focus-visible {
        --tw-ring-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .focus-visible\:ring-ring\/50:focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    .focus-visible\:outline-hidden:focus-visible {
        --tw-outline-style: none;
        outline-style: none;
    }

    @media (forced-colors: active) {
        .focus-visible\:outline-hidden:focus-visible {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }

    .focus-visible\:outline-1:focus-visible {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .focus-visible\:outline-ring:focus-visible {
        outline-color: var(--ring);
    }

    .disabled\:pointer-events-none:disabled {
        pointer-events: none;
    }

    .disabled\:cursor-not-allowed:disabled {
        cursor: not-allowed;
    }

    .disabled\:opacity-50:disabled {
        opacity: .5;
    }

    .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
        grid-template-columns: 1fr auto;
    }

    .has-\[\>svg\]\:px-2\.5:has( > svg) {
        padding-inline: calc(var(--spacing) * 2.5);
    }

    .has-\[\>svg\]\:px-3:has( > svg) {
        padding-inline: calc(var(--spacing) * 3);
    }

    .has-\[\>svg\]\:px-4:has( > svg) {
        padding-inline: calc(var(--spacing) * 4);
    }

    .aria-invalid\:border-destructive[aria-invalid="true"] {
        border-color: var(--destructive);
    }

    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
    }

    .data-\[disabled\]\:opacity-50[data-disabled] {
        opacity: .5;
    }

    .data-\[orientation\=horizontal\]\:h-4[data-orientation="horizontal"] {
        height: calc(var(--spacing) * 4);
    }

    .data-\[orientation\=horizontal\]\:h-full[data-orientation="horizontal"] {
        height: 100%;
    }

    .data-\[orientation\=horizontal\]\:w-full[data-orientation="horizontal"] {
        width: 100%;
    }

    .data-\[orientation\=vertical\]\:h-full[data-orientation="vertical"] {
        height: 100%;
    }

    .data-\[orientation\=vertical\]\:min-h-44[data-orientation="vertical"] {
        min-height: calc(var(--spacing) * 44);
    }

    .data-\[orientation\=vertical\]\:w-1\.5[data-orientation="vertical"] {
        width: calc(var(--spacing) * 1.5);
    }

    .data-\[orientation\=vertical\]\:w-auto[data-orientation="vertical"] {
        width: auto;
    }

    .data-\[orientation\=vertical\]\:w-full[data-orientation="vertical"] {
        width: 100%;
    }

    .data-\[orientation\=vertical\]\:flex-col[data-orientation="vertical"] {
        flex-direction: column;
    }

    .data-\[state\=active\]\:bg-card[data-state="active"] {
        background-color: var(--card);
    }

    .data-\[state\=checked\]\:translate-x-\[calc\(100\%-2px\)\][data-state="checked"] {
        --tw-translate-x: calc(100% - 2px);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .data-\[state\=checked\]\:bg-primary[data-state="checked"] {
        background-color: var(--primary);
    }

    .data-\[state\=unchecked\]\:translate-x-0[data-state="unchecked"] {
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .data-\[state\=unchecked\]\:bg-switch-background[data-state="unchecked"] {
        background-color: var(--switch-background);
    }

    @media (width >= 48rem) {
        .md\:flex {
            display: flex;
        }
    }

    @media (width >= 48rem) {
        .md\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    @media (width >= 48rem) {
        .md\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    @media (width >= 48rem) {
        .md\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    @media (width >= 48rem) {
        .md\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    @media (width >= 64rem) {
        .lg\:col-span-2 {
            grid-column: span 2 / span 2;
        }
    }

    @media (width >= 64rem) {
        .lg\:ml-72 {
            margin-left: calc(var(--spacing) * 72);
        }
    }

    @media (width >= 64rem) {
        .lg\:hidden {
            display: none;
        }
    }

    @media (width >= 64rem) {
        .lg\:translate-x-0 {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    @media (width >= 64rem) {
        .lg\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    @media (width >= 64rem) {
        .lg\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    @media (width >= 64rem) {
        .lg\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    .dark\:border-input:is(.dark *) {
        border-color: var(--input);
    }

    .dark\:bg-destructive\/60:is(.dark *) {
        background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-destructive\/60:is(.dark *) {
            background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
        }
    }

    .dark\:bg-input\/30:is(.dark *) {
        background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-input\/30:is(.dark *) {
            background-color: color-mix(in oklab, var(--input) 30%, transparent);
        }
    }

    .dark\:text-muted-foreground:is(.dark *) {
        color: var(--muted-foreground);
    }

    @media (hover: hover) {
        .dark\:hover\:bg-accent\/50:is(.dark *):hover {
            background-color: var(--accent);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .dark\:hover\:bg-accent\/50:is(.dark *):hover {
                background-color: color-mix(in oklab, var(--accent) 50%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .dark\:hover\:bg-input\/50:is(.dark *):hover {
            background-color: var(--input);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .dark\:hover\:bg-input\/50:is(.dark *):hover {
                background-color: color-mix(in oklab, var(--input) 50%, transparent);
            }
        }
    }

    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
    }

    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
    }

    .dark\:data-\[state\=active\]\:border-input:is(.dark *)[data-state="active"] {
        border-color: var(--input);
    }

    .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
        background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
            background-color: color-mix(in oklab, var(--input) 30%, transparent);
        }
    }

    .dark\:data-\[state\=active\]\:text-foreground:is(.dark *)[data-state="active"] {
        color: var(--foreground);
    }

    .dark\:data-\[state\=checked\]\:bg-primary-foreground:is(.dark *)[data-state="checked"] {
        background-color: var(--primary-foreground);
    }

    .dark\:data-\[state\=unchecked\]\:bg-card-foreground:is(.dark *)[data-state="unchecked"] {
        background-color: var(--card-foreground);
    }

    .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
        background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
            background-color: color-mix(in oklab, var(--input) 80%, transparent);
        }
    }

    .\[\&_svg\]\:pointer-events-none svg {
        pointer-events: none;
    }

    .\[\&_svg\]\:shrink-0 svg {
        flex-shrink: 0;
    }

    .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }

    .\[\.border-b\]\:pb-6.border-b {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .\[\.border-t\]\:pt-6.border-t {
        padding-top: calc(var(--spacing) * 6);
    }

    .\[\&\:last-child\]\:pb-6:last-child {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .\[\&\>svg\]\:pointer-events-none > svg {
        pointer-events: none;
    }

    .\[\&\>svg\]\:size-3 > svg {
        width: calc(var(--spacing) * 3);
        height: calc(var(--spacing) * 3);
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:bg-accent:hover {
            background-color: var(--accent);
        }
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:bg-destructive\/90:hover {
            background-color: var(--destructive);
        }

        @supports (color: color-mix(in lab, red, red)) {
            a.\[a\&\]\:hover\:bg-destructive\/90:hover {
                background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:bg-primary\/90:hover {
            background-color: var(--primary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            a.\[a\&\]\:hover\:bg-primary\/90:hover {
                background-color: color-mix(in oklab, var(--primary) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:bg-secondary\/90:hover {
            background-color: var(--secondary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            a.\[a\&\]\:hover\:bg-secondary\/90:hover {
                background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:text-accent-foreground:hover {
            color: var(--accent-foreground);
        }
    }

    .glass {
        background: color-mix(in srgb, var(--card) 50%, transparent);
        -webkit-backdrop-filter: blur(18px);
        border: 1px solid var(--color-border);
        border-radius: var(--radius-lg);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .glass {
            background: color-mix(in oklch, var(--color-card) 50%, transparent);
        }
    }

    .glass-strong {
        background: color-mix(in srgb, var(--card) 60%, transparent);
        -webkit-backdrop-filter: blur(22px);
        border: 1px solid var(--color-border);
        border-radius: var(--radius-xl);
        box-shadow: 0 6px 28px #00000040;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .glass-strong {
            background: color-mix(in oklch, var(--color-card) 60%, transparent);
        }
    }

    .glass-chip {
        background: color-mix(in srgb, var(--muted) 40%, transparent);
        border: 1px solid var(--color-border);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 9999px;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .glass-chip {
            background: color-mix(in oklch, var(--color-muted) 40%, transparent);
        }
    }

    .elev-1 {
        box-shadow: 0 4px 16px #0000002e;
    }

    .elev-2 {
        box-shadow: 0 8px 24px #00000038;
    }

    .elev-3 {
        box-shadow: 0 12px 36px #00000047;
    }

    .glow-primary {
        box-shadow: 0 0 #0000, 0 0 24px #19b3ff40;
    }

    .glow-danger {
        box-shadow: 0 0 24px #d4183d40;
    }

    .glow-success {
        box-shadow: 0 0 24px #2e854040;
    }

    .hud-grid {
        background-image: radial-gradient(closest-side, #ffffff0d, #0000 70%), linear-gradient(to right, #ffffff08 1px, #0000 1px), linear-gradient(#ffffff08 1px, #0000 1px);
        background-position: center;
        background-size: 100% 100%, 48px 48px, 48px 48px;
    }

    .radar-ring {
        background: radial-gradient(closest-side, #19b3ff26, #0000 70%);
        border-radius: 9999px;
        box-shadow: inset 0 0 0 1px #ffffff1f;
    }
}

:root {
    --font-size: 16px;
    --background: #fff;
    --foreground: oklch(.145 0 0);
    --card: #fff;
    --card-foreground: oklch(.145 0 0);
    --popover: oklch(1 0 0);
    --popover-foreground: oklch(.145 0 0);
    --primary: #105bd8;
    --primary-foreground: oklch(1 0 0);
    --secondary: oklch(.95 .0058 264.53);
    --secondary-foreground: #030213;
    --muted: #ececf0;
    --muted-foreground: #717182;
    --accent: #e9ebef;
    --accent-foreground: #030213;
    --destructive: #d4183d;
    --destructive-foreground: #fff;
    --success: oklch(.7 .12 150);
    --warning: oklch(.85 .15 80);
    --info: oklch(.78 .12 200);
    --border: #00000014;
    --input: transparent;
    --input-background: #f3f3f5;
    --switch-background: #cbced4;
    --ring: oklch(.708 0 0);
    --chart-1: oklch(.646 .222 41.116);
    --chart-2: oklch(.6 .118 184.704);
    --chart-3: oklch(.398 .07 227.392);
    --chart-4: oklch(.828 .189 84.429);
    --chart-5: oklch(.769 .188 70.08);
    --radius: .75rem;
    --sidebar: oklch(.985 0 0);
    --sidebar-foreground: oklch(.145 0 0);
    --sidebar-primary: #105bd8;
    --sidebar-primary-foreground: oklch(.985 0 0);
    --sidebar-accent: oklch(.97 0 0);
    --sidebar-accent-foreground: oklch(.205 0 0);
    --sidebar-border: oklch(.922 0 0);
    --sidebar-ring: oklch(.708 0 0);
    --glass-bg: #fff9;
    --glass-tint: #fff3;
    --glass-border: #0a0a121f;
    --glass-blur: 18px;
    --glow-cyan: 0 0 0 0 #105bd800;
}

.dark {
    --background: oklch(.145 0 0);
    --foreground: oklch(.985 0 0);
    --card: #ffffff0f;
    --card-foreground: oklch(.985 0 0);
    --popover: oklch(.145 0 0);
    --popover-foreground: oklch(.985 0 0);
    --primary: #19b3ff;
    --primary-foreground: oklch(.205 0 0);
    --secondary: oklch(.269 0 0);
    --secondary-foreground: oklch(.985 0 0);
    --muted: oklch(.269 0 0);
    --muted-foreground: oklch(.708 0 0);
    --accent: oklch(.269 0 0);
    --accent-foreground: oklch(.985 0 0);
    --destructive: oklch(.396 .141 25.723);
    --destructive-foreground: oklch(.985 0 0);
    --success: oklch(.72 .14 150);
    --warning: oklch(.78 .16 80);
    --info: oklch(.82 .14 200);
    --border: oklch(.269 0 0);
    --input: oklch(.269 0 0);
    --ring: oklch(.439 0 0);
    --chart-1: oklch(.488 .243 264.376);
    --chart-2: oklch(.696 .17 162.48);
    --chart-3: oklch(.769 .188 70.08);
    --chart-4: oklch(.627 .265 303.9);
    --chart-5: oklch(.645 .246 16.439);
    --sidebar: oklch(.205 0 0);
    --sidebar-foreground: oklch(.985 0 0);
    --sidebar-primary: #19b3ff;
    --sidebar-primary-foreground: oklch(.985 0 0);
    --sidebar-accent: oklch(.269 0 0);
    --sidebar-accent-foreground: oklch(.985 0 0);
    --sidebar-border: oklch(.269 0 0);
    --sidebar-ring: oklch(.439 0 0);
    --glass-bg: #ffffff12;
    --glass-tint: #ffffff1f;
    --glass-border: #ffffff1f;
    --glass-blur: 22px;
    --glow-cyan: 0 0 24px 0 #19b3ff40;
}

@layer components {
    .nss-card {
        background: color-mix(in srgb, var(--card) 50%, transparent);
        -webkit-backdrop-filter: blur(18px);
        border: 1px solid var(--color-border);
        border-radius: var(--radius-lg);
        padding: 1rem;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .nss-card {
            background: color-mix(in oklch, var(--color-card) 50%, transparent);
        }
    }

    @media (width >= 768px) {
        .nss-card {
            padding: 1.5rem;
        }
    }

    .nss-panel {
        background: color-mix(in srgb, var(--card) 60%, transparent);
        -webkit-backdrop-filter: blur(22px);
        border: 1px solid var(--color-border);
        border-radius: var(--radius-xl);
        padding: 1.5rem;
        box-shadow: 0 6px 28px #00000040;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .nss-panel {
            background: color-mix(in oklch, var(--color-card) 60%, transparent);
        }
    }

    .nss-btn {
        border-radius: var(--radius-md);
        letter-spacing: .01em;
        justify-content: center;
        align-items: center;
        gap: .5rem;
        height: 44px;
        padding: 0 1rem;
        font-weight: 600;
        transition: all .2s;
        display: inline-flex;
    }

    .nss-btn:focus-visible {
        outline: 2px solid var(--color-ring);
        outline-offset: 2px;
    }

    .nss-btn--primary {
        color: var(--color-primary-foreground);
        background: linear-gradient(180deg, var(--color-primary), color-mix(in srgb, var(--primary) 78%, black));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .nss-btn--primary {
            background: linear-gradient(180deg, var(--color-primary), color-mix(in oklab, var(--color-primary) 78%, black));
        }
    }

    .nss-btn--primary:hover {
        filter: brightness(1.06);
        transform: translateY(-1px);
    }

    .nss-btn--secondary {
        color: var(--color-primary);
        border: 1px solid var(--color-primary);
        background: none;
    }

    .nss-btn--secondary:hover {
        background: color-mix(in srgb, var(--primary) 12%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .nss-btn--secondary:hover {
            background: color-mix(in oklab, var(--color-primary) 12%, transparent);
        }
    }

    .nss-btn--ghost {
        color: var(--color-primary);
        background: none;
    }

    .nss-input {
        border-radius: var(--radius-md);
        border: 1px solid var(--color-border);
        background: color-mix(in srgb, var(--background) 80%, transparent);
        -webkit-backdrop-filter: blur(10px);
        backdrop-filter: blur(10px);
        width: 100%;
        height: 44px;
        padding: 0 .875rem;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .nss-input {
            background: color-mix(in oklab, var(--color-background) 80%, transparent);
        }
    }

    .nss-input:focus {
        outline: 2px solid var(--color-ring);
        outline-offset: 2px;
    }

    .nss-topbar {
        background: color-mix(in srgb, var(--card) 30%, transparent);
        border-bottom: 1px solid var(--color-border);
        -webkit-backdrop-filter: blur(14px);
        justify-content: space-between;
        align-items: center;
        height: 64px;
        padding: 0 1rem;
        display: flex;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .nss-topbar {
            background: color-mix(in oklch, var(--color-card) 30%, transparent);
        }
    }

    .nss-sidebar {
        background: color-mix(in srgb, var(--sidebar) 95%, transparent);
        border-right: 1px solid var(--color-sidebar-border);
        -webkit-backdrop-filter: blur(12px);
        width: 280px;
        padding: .75rem;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .nss-sidebar {
            background: color-mix(in oklch, var(--color-sidebar) 95%, transparent);
        }
    }
}

:focus-visible {
    outline: 2px solid var(--color-ring);
    outline-offset: 2px;
}

@media (prefers-reduced-motion: reduce) {
    * {
        scroll-behavior: auto !important;
        transition-duration: .001ms !important;
        animation-duration: .001ms !important;
        animation-iteration-count: 1 !important;
    }
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
    initial-value: rotateX(0);
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
    initial-value: rotateY(0);
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
    initial-value: rotateZ(0);
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
    initial-value: skewX(0);
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
    initial-value: skewY(0);
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-tracking {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-blur {
    syntax: "*";
    inherits: false
}

@property --tw-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-invert {
    syntax: "*";
    inherits: false
}

@property --tw-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

@keyframes pulse {
    50% {
        opacity: .5;
    }
}
